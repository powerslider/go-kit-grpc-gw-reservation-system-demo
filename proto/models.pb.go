// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Customer struct {
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Created              int64    `protobuf:"varint,6,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated          int64    `protobuf:"varint,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{0}
}
func (m *Customer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return m.Size()
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Customer) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Customer) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Customer) GetLastUpdated() int64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (*Customer) XXX_MessageName() string {
	return "Customer"
}

type GetAllCustomersRequest struct {
	Limit                uint64   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllCustomersRequest) Reset()         { *m = GetAllCustomersRequest{} }
func (m *GetAllCustomersRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllCustomersRequest) ProtoMessage()    {}
func (*GetAllCustomersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{1}
}
func (m *GetAllCustomersRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAllCustomersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAllCustomersRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAllCustomersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCustomersRequest.Merge(m, src)
}
func (m *GetAllCustomersRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetAllCustomersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCustomersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCustomersRequest proto.InternalMessageInfo

func (m *GetAllCustomersRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllCustomersRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (*GetAllCustomersRequest) XXX_MessageName() string {
	return "GetAllCustomersRequest"
}

type GetAllCustomersResponse struct {
	Customers            []Customer `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers"`
	Err                  string     `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetAllCustomersResponse) Reset()         { *m = GetAllCustomersResponse{} }
func (m *GetAllCustomersResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllCustomersResponse) ProtoMessage()    {}
func (*GetAllCustomersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{2}
}
func (m *GetAllCustomersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAllCustomersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAllCustomersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAllCustomersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllCustomersResponse.Merge(m, src)
}
func (m *GetAllCustomersResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetAllCustomersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllCustomersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllCustomersResponse proto.InternalMessageInfo

func (m *GetAllCustomersResponse) GetCustomers() []Customer {
	if m != nil {
		return m.Customers
	}
	return nil
}

func (m *GetAllCustomersResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*GetAllCustomersResponse) XXX_MessageName() string {
	return "GetAllCustomersResponse"
}

type GetCustomerByIDRequest struct {
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCustomerByIDRequest) Reset()         { *m = GetCustomerByIDRequest{} }
func (m *GetCustomerByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetCustomerByIDRequest) ProtoMessage()    {}
func (*GetCustomerByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{3}
}
func (m *GetCustomerByIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCustomerByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCustomerByIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCustomerByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerByIDRequest.Merge(m, src)
}
func (m *GetCustomerByIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetCustomerByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerByIDRequest proto.InternalMessageInfo

func (m *GetCustomerByIDRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (*GetCustomerByIDRequest) XXX_MessageName() string {
	return "GetCustomerByIDRequest"
}

type GetCustomerByIDResponse struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Err                  string    `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetCustomerByIDResponse) Reset()         { *m = GetCustomerByIDResponse{} }
func (m *GetCustomerByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetCustomerByIDResponse) ProtoMessage()    {}
func (*GetCustomerByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{4}
}
func (m *GetCustomerByIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetCustomerByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetCustomerByIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetCustomerByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCustomerByIDResponse.Merge(m, src)
}
func (m *GetCustomerByIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetCustomerByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCustomerByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCustomerByIDResponse proto.InternalMessageInfo

func (m *GetCustomerByIDResponse) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *GetCustomerByIDResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*GetCustomerByIDResponse) XXX_MessageName() string {
	return "GetCustomerByIDResponse"
}

type RegisterCustomerRequest struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterCustomerRequest) Reset()         { *m = RegisterCustomerRequest{} }
func (m *RegisterCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterCustomerRequest) ProtoMessage()    {}
func (*RegisterCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{5}
}
func (m *RegisterCustomerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterCustomerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCustomerRequest.Merge(m, src)
}
func (m *RegisterCustomerRequest) XXX_Size() int {
	return m.Size()
}
func (m *RegisterCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCustomerRequest proto.InternalMessageInfo

func (m *RegisterCustomerRequest) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (*RegisterCustomerRequest) XXX_MessageName() string {
	return "RegisterCustomerRequest"
}

type RegisterCustomerResponse struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Err                  string    `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterCustomerResponse) Reset()         { *m = RegisterCustomerResponse{} }
func (m *RegisterCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterCustomerResponse) ProtoMessage()    {}
func (*RegisterCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{6}
}
func (m *RegisterCustomerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterCustomerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterCustomerResponse.Merge(m, src)
}
func (m *RegisterCustomerResponse) XXX_Size() int {
	return m.Size()
}
func (m *RegisterCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterCustomerResponse proto.InternalMessageInfo

func (m *RegisterCustomerResponse) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *RegisterCustomerResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*RegisterCustomerResponse) XXX_MessageName() string {
	return "RegisterCustomerResponse"
}

type UnregisterCustomerRequest struct {
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterCustomerRequest) Reset()         { *m = UnregisterCustomerRequest{} }
func (m *UnregisterCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterCustomerRequest) ProtoMessage()    {}
func (*UnregisterCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{7}
}
func (m *UnregisterCustomerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnregisterCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnregisterCustomerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnregisterCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterCustomerRequest.Merge(m, src)
}
func (m *UnregisterCustomerRequest) XXX_Size() int {
	return m.Size()
}
func (m *UnregisterCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterCustomerRequest proto.InternalMessageInfo

func (m *UnregisterCustomerRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (*UnregisterCustomerRequest) XXX_MessageName() string {
	return "UnregisterCustomerRequest"
}

type UnregisterCustomerResponse struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterCustomerResponse) Reset()         { *m = UnregisterCustomerResponse{} }
func (m *UnregisterCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*UnregisterCustomerResponse) ProtoMessage()    {}
func (*UnregisterCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{8}
}
func (m *UnregisterCustomerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnregisterCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnregisterCustomerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnregisterCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterCustomerResponse.Merge(m, src)
}
func (m *UnregisterCustomerResponse) XXX_Size() int {
	return m.Size()
}
func (m *UnregisterCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterCustomerResponse proto.InternalMessageInfo

func (m *UnregisterCustomerResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*UnregisterCustomerResponse) XXX_MessageName() string {
	return "UnregisterCustomerResponse"
}

type Reservation struct {
	ReservationId        int64    `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	SeatCount            int64    `protobuf:"varint,2,opt,name=seat_count,json=seatCount,proto3" json:"seat_count,omitempty"`
	StartTime            string   `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ReservationName      string   `protobuf:"bytes,4,opt,name=reservation_name,json=reservationName,proto3" json:"reservation_name,omitempty"`
	CustomerId           int64    `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Comments             string   `protobuf:"bytes,7,opt,name=comments,proto3" json:"comments,omitempty"`
	Created              int64    `protobuf:"varint,8,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated          int64    `protobuf:"varint,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reservation) Reset()         { *m = Reservation{} }
func (m *Reservation) String() string { return proto.CompactTextString(m) }
func (*Reservation) ProtoMessage()    {}
func (*Reservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{9}
}
func (m *Reservation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Reservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Reservation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Reservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservation.Merge(m, src)
}
func (m *Reservation) XXX_Size() int {
	return m.Size()
}
func (m *Reservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservation.DiscardUnknown(m)
}

var xxx_messageInfo_Reservation proto.InternalMessageInfo

func (m *Reservation) GetReservationId() int64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (m *Reservation) GetSeatCount() int64 {
	if m != nil {
		return m.SeatCount
	}
	return 0
}

func (m *Reservation) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *Reservation) GetReservationName() string {
	if m != nil {
		return m.ReservationName
	}
	return ""
}

func (m *Reservation) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *Reservation) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Reservation) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *Reservation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Reservation) GetLastUpdated() int64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (*Reservation) XXX_MessageName() string {
	return "Reservation"
}

type BookReservationRequest struct {
	CustomerId           int64        `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Reservation          *Reservation `protobuf:"bytes,2,opt,name=reservation,proto3" json:"reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BookReservationRequest) Reset()         { *m = BookReservationRequest{} }
func (m *BookReservationRequest) String() string { return proto.CompactTextString(m) }
func (*BookReservationRequest) ProtoMessage()    {}
func (*BookReservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{10}
}
func (m *BookReservationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BookReservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BookReservationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BookReservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookReservationRequest.Merge(m, src)
}
func (m *BookReservationRequest) XXX_Size() int {
	return m.Size()
}
func (m *BookReservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BookReservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BookReservationRequest proto.InternalMessageInfo

func (m *BookReservationRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *BookReservationRequest) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (*BookReservationRequest) XXX_MessageName() string {
	return "BookReservationRequest"
}

type BookReservationResponse struct {
	Reservation          *Reservation `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	Err                  string       `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BookReservationResponse) Reset()         { *m = BookReservationResponse{} }
func (m *BookReservationResponse) String() string { return proto.CompactTextString(m) }
func (*BookReservationResponse) ProtoMessage()    {}
func (*BookReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{11}
}
func (m *BookReservationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BookReservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BookReservationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BookReservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookReservationResponse.Merge(m, src)
}
func (m *BookReservationResponse) XXX_Size() int {
	return m.Size()
}
func (m *BookReservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BookReservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BookReservationResponse proto.InternalMessageInfo

func (m *BookReservationResponse) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

func (m *BookReservationResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*BookReservationResponse) XXX_MessageName() string {
	return "BookReservationResponse"
}

type DiscardReservationRequest struct {
	ReservationId        int64    `protobuf:"varint,1,opt,name=reservation_id,json=reservationId,proto3" json:"reservation_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardReservationRequest) Reset()         { *m = DiscardReservationRequest{} }
func (m *DiscardReservationRequest) String() string { return proto.CompactTextString(m) }
func (*DiscardReservationRequest) ProtoMessage()    {}
func (*DiscardReservationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{12}
}
func (m *DiscardReservationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DiscardReservationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DiscardReservationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DiscardReservationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardReservationRequest.Merge(m, src)
}
func (m *DiscardReservationRequest) XXX_Size() int {
	return m.Size()
}
func (m *DiscardReservationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardReservationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardReservationRequest proto.InternalMessageInfo

func (m *DiscardReservationRequest) GetReservationId() int64 {
	if m != nil {
		return m.ReservationId
	}
	return 0
}

func (*DiscardReservationRequest) XXX_MessageName() string {
	return "DiscardReservationRequest"
}

type DiscardReservationResponse struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscardReservationResponse) Reset()         { *m = DiscardReservationResponse{} }
func (m *DiscardReservationResponse) String() string { return proto.CompactTextString(m) }
func (*DiscardReservationResponse) ProtoMessage()    {}
func (*DiscardReservationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{13}
}
func (m *DiscardReservationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DiscardReservationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DiscardReservationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DiscardReservationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscardReservationResponse.Merge(m, src)
}
func (m *DiscardReservationResponse) XXX_Size() int {
	return m.Size()
}
func (m *DiscardReservationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscardReservationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscardReservationResponse proto.InternalMessageInfo

func (m *DiscardReservationResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*DiscardReservationResponse) XXX_MessageName() string {
	return "DiscardReservationResponse"
}

type GetReservationHistoryPerCustomerRequest struct {
	CustomerId           int64    `protobuf:"varint,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReservationHistoryPerCustomerRequest) Reset() {
	*m = GetReservationHistoryPerCustomerRequest{}
}
func (m *GetReservationHistoryPerCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*GetReservationHistoryPerCustomerRequest) ProtoMessage()    {}
func (*GetReservationHistoryPerCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{14}
}
func (m *GetReservationHistoryPerCustomerRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetReservationHistoryPerCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetReservationHistoryPerCustomerRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetReservationHistoryPerCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReservationHistoryPerCustomerRequest.Merge(m, src)
}
func (m *GetReservationHistoryPerCustomerRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetReservationHistoryPerCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReservationHistoryPerCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReservationHistoryPerCustomerRequest proto.InternalMessageInfo

func (m *GetReservationHistoryPerCustomerRequest) GetCustomerId() int64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *GetReservationHistoryPerCustomerRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetReservationHistoryPerCustomerRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (*GetReservationHistoryPerCustomerRequest) XXX_MessageName() string {
	return "GetReservationHistoryPerCustomerRequest"
}

type GetReservationHistoryPerCustomerResponse struct {
	Reservations         []Reservation `protobuf:"bytes,1,rep,name=reservations,proto3" json:"reservations"`
	Err                  string        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetReservationHistoryPerCustomerResponse) Reset() {
	*m = GetReservationHistoryPerCustomerResponse{}
}
func (m *GetReservationHistoryPerCustomerResponse) String() string { return proto.CompactTextString(m) }
func (*GetReservationHistoryPerCustomerResponse) ProtoMessage()    {}
func (*GetReservationHistoryPerCustomerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b5431a010549573, []int{15}
}
func (m *GetReservationHistoryPerCustomerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetReservationHistoryPerCustomerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetReservationHistoryPerCustomerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetReservationHistoryPerCustomerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReservationHistoryPerCustomerResponse.Merge(m, src)
}
func (m *GetReservationHistoryPerCustomerResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetReservationHistoryPerCustomerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReservationHistoryPerCustomerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReservationHistoryPerCustomerResponse proto.InternalMessageInfo

func (m *GetReservationHistoryPerCustomerResponse) GetReservations() []Reservation {
	if m != nil {
		return m.Reservations
	}
	return nil
}

func (m *GetReservationHistoryPerCustomerResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (*GetReservationHistoryPerCustomerResponse) XXX_MessageName() string {
	return "GetReservationHistoryPerCustomerResponse"
}
func init() {
	proto.RegisterType((*Customer)(nil), "Customer")
	golang_proto.RegisterType((*Customer)(nil), "Customer")
	proto.RegisterType((*GetAllCustomersRequest)(nil), "GetAllCustomersRequest")
	golang_proto.RegisterType((*GetAllCustomersRequest)(nil), "GetAllCustomersRequest")
	proto.RegisterType((*GetAllCustomersResponse)(nil), "GetAllCustomersResponse")
	golang_proto.RegisterType((*GetAllCustomersResponse)(nil), "GetAllCustomersResponse")
	proto.RegisterType((*GetCustomerByIDRequest)(nil), "GetCustomerByIDRequest")
	golang_proto.RegisterType((*GetCustomerByIDRequest)(nil), "GetCustomerByIDRequest")
	proto.RegisterType((*GetCustomerByIDResponse)(nil), "GetCustomerByIDResponse")
	golang_proto.RegisterType((*GetCustomerByIDResponse)(nil), "GetCustomerByIDResponse")
	proto.RegisterType((*RegisterCustomerRequest)(nil), "RegisterCustomerRequest")
	golang_proto.RegisterType((*RegisterCustomerRequest)(nil), "RegisterCustomerRequest")
	proto.RegisterType((*RegisterCustomerResponse)(nil), "RegisterCustomerResponse")
	golang_proto.RegisterType((*RegisterCustomerResponse)(nil), "RegisterCustomerResponse")
	proto.RegisterType((*UnregisterCustomerRequest)(nil), "UnregisterCustomerRequest")
	golang_proto.RegisterType((*UnregisterCustomerRequest)(nil), "UnregisterCustomerRequest")
	proto.RegisterType((*UnregisterCustomerResponse)(nil), "UnregisterCustomerResponse")
	golang_proto.RegisterType((*UnregisterCustomerResponse)(nil), "UnregisterCustomerResponse")
	proto.RegisterType((*Reservation)(nil), "Reservation")
	golang_proto.RegisterType((*Reservation)(nil), "Reservation")
	proto.RegisterType((*BookReservationRequest)(nil), "BookReservationRequest")
	golang_proto.RegisterType((*BookReservationRequest)(nil), "BookReservationRequest")
	proto.RegisterType((*BookReservationResponse)(nil), "BookReservationResponse")
	golang_proto.RegisterType((*BookReservationResponse)(nil), "BookReservationResponse")
	proto.RegisterType((*DiscardReservationRequest)(nil), "DiscardReservationRequest")
	golang_proto.RegisterType((*DiscardReservationRequest)(nil), "DiscardReservationRequest")
	proto.RegisterType((*DiscardReservationResponse)(nil), "DiscardReservationResponse")
	golang_proto.RegisterType((*DiscardReservationResponse)(nil), "DiscardReservationResponse")
	proto.RegisterType((*GetReservationHistoryPerCustomerRequest)(nil), "GetReservationHistoryPerCustomerRequest")
	golang_proto.RegisterType((*GetReservationHistoryPerCustomerRequest)(nil), "GetReservationHistoryPerCustomerRequest")
	proto.RegisterType((*GetReservationHistoryPerCustomerResponse)(nil), "GetReservationHistoryPerCustomerResponse")
	golang_proto.RegisterType((*GetReservationHistoryPerCustomerResponse)(nil), "GetReservationHistoryPerCustomerResponse")
}

func init() { proto.RegisterFile("models.proto", fileDescriptor_0b5431a010549573) }
func init() { golang_proto.RegisterFile("models.proto", fileDescriptor_0b5431a010549573) }

var fileDescriptor_0b5431a010549573 = []byte{
	// 1229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x41, 0x6f, 0xdc, 0x44,
	0x14, 0x66, 0x76, 0x93, 0x34, 0x3b, 0x09, 0x4d, 0x34, 0xaa, 0x12, 0xc7, 0x6d, 0x13, 0x63, 0x28,
	0xa4, 0x11, 0x3b, 0x4e, 0xb7, 0x12, 0x94, 0xa8, 0x45, 0xdd, 0x24, 0xa5, 0x44, 0xaa, 0x4a, 0x71,
	0xda, 0x4b, 0x39, 0x04, 0xd7, 0x3b, 0xf5, 0x5a, 0xb5, 0x3d, 0x66, 0x66, 0x92, 0x6d, 0x54, 0x55,
	0x42, 0x48, 0xfc, 0x81, 0xe5, 0xc0, 0x85, 0x33, 0x37, 0xc4, 0x01, 0x38, 0x22, 0x71, 0x2a, 0x3d,
	0x56, 0xe2, 0x8e, 0xaa, 0x96, 0xff, 0x01, 0xf2, 0xd8, 0xde, 0x9d, 0xdd, 0xb5, 0xd9, 0x85, 0x9e,
	0xd6, 0xf3, 0xde, 0x37, 0x6f, 0xbe, 0xf7, 0xe6, 0xbd, 0x6f, 0x12, 0x38, 0x1f, 0xd2, 0x16, 0x09,
	0x38, 0x8e, 0x19, 0x15, 0x54, 0x3f, 0xe3, 0x51, 0xea, 0x05, 0xc4, 0x72, 0x62, 0xdf, 0x72, 0xa2,
	0x88, 0x0a, 0x47, 0xf8, 0x34, 0xca, 0xbd, 0xef, 0xca, 0x1f, 0xb7, 0xee, 0x91, 0xa8, 0xce, 0x3b,
	0x8e, 0xe7, 0x11, 0x66, 0xd1, 0x58, 0x22, 0x0a, 0xd0, 0xa7, 0x3c, 0xea, 0x51, 0xf9, 0x69, 0x25,
	0x5f, 0xa9, 0xd5, 0x7c, 0x06, 0xe0, 0xec, 0xce, 0x21, 0x17, 0x34, 0x24, 0x0c, 0xad, 0xc1, 0x39,
	0x37, 0xfb, 0x3e, 0xf0, 0x5b, 0x1a, 0x30, 0xc0, 0x7a, 0xd5, 0x86, 0xb9, 0x69, 0xaf, 0x85, 0xce,
	0x42, 0x78, 0xdf, 0x67, 0x5c, 0x1c, 0x44, 0x4e, 0x48, 0xb4, 0x8a, 0x01, 0xd6, 0x6b, 0x76, 0x4d,
	0x5a, 0x6e, 0x3a, 0x21, 0x41, 0xa7, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x55, 0x7a, 0x67, 0x13, 0x83,
	0x74, 0x9e, 0x82, 0xd3, 0x24, 0x74, 0xfc, 0x40, 0x9b, 0x92, 0x8e, 0x74, 0x91, 0x58, 0xe3, 0x36,
	0x8d, 0x88, 0x36, 0x9d, 0x5a, 0xe5, 0x02, 0x69, 0xf0, 0x84, 0xcb, 0x88, 0x23, 0x48, 0x4b, 0x9b,
	0x91, 0x24, 0xf2, 0x25, 0x7a, 0x03, 0xce, 0xcb, 0x23, 0x0e, 0xe3, 0x96, 0x74, 0x9f, 0x90, 0xee,
	0xb9, 0xc4, 0x76, 0x27, 0x35, 0x99, 0x1f, 0xc1, 0xa5, 0xeb, 0x44, 0x34, 0x83, 0x20, 0xcf, 0x8b,
	0xdb, 0xe4, 0x8b, 0x43, 0xc2, 0x45, 0x72, 0x58, 0xe0, 0x87, 0xbe, 0x90, 0x99, 0x4d, 0xd9, 0xe9,
	0x02, 0x2d, 0xc1, 0x19, 0x7a, 0xff, 0x3e, 0x27, 0x42, 0x26, 0x34, 0x65, 0x67, 0x2b, 0xf3, 0x2e,
	0x5c, 0x1e, 0x89, 0xc3, 0x63, 0x1a, 0x71, 0x82, 0xea, 0xb0, 0x96, 0x57, 0x85, 0x6b, 0xc0, 0xa8,
	0xae, 0xcf, 0x35, 0x6a, 0x38, 0x87, 0x6d, 0x4f, 0x3d, 0xfd, 0x73, 0xed, 0x35, 0xbb, 0x8f, 0x40,
	0x8b, 0xb0, 0x4a, 0x18, 0xcb, 0xea, 0x95, 0x7c, 0x9a, 0x1f, 0x48, 0x8e, 0xbd, 0x1d, 0xc7, 0x7b,
	0xbb, 0x39, 0xc7, 0x71, 0x77, 0x60, 0xda, 0x92, 0xd6, 0xe0, 0xd6, 0x8c, 0xd6, 0x39, 0x38, 0x9b,
	0x03, 0xe5, 0x46, 0x95, 0x95, 0xdd, 0x73, 0x15, 0xd0, 0xb9, 0x0a, 0x97, 0x6d, 0xe2, 0xf9, 0x5c,
	0x10, 0xd6, 0xc3, 0x67, 0x7c, 0x26, 0x8b, 0x69, 0xee, 0x43, 0x6d, 0x34, 0xc2, 0xab, 0xd2, 0xba,
	0x0c, 0x57, 0xee, 0x44, 0xac, 0x84, 0xd8, 0xd8, 0x42, 0x61, 0xa8, 0x17, 0xed, 0xce, 0x48, 0x65,
	0xa7, 0x81, 0xfe, 0x69, 0x3f, 0x54, 0xe0, 0x9c, 0x4d, 0x38, 0x61, 0x47, 0x72, 0x6e, 0xd0, 0x39,
	0x78, 0x92, 0xf5, 0x97, 0xfd, 0x33, 0x5e, 0x57, 0xac, 0xe9, 0x4c, 0x70, 0xe2, 0x88, 0x03, 0x97,
	0x1e, 0x46, 0x69, 0x0b, 0x55, 0xed, 0x5a, 0x62, 0xd9, 0x49, 0x0c, 0xd2, 0x2d, 0x1c, 0x26, 0x0e,
	0x84, 0xdf, 0x1b, 0x8a, 0x9a, 0xb4, 0xdc, 0xf6, 0x43, 0x82, 0xce, 0xc3, 0x45, 0xf5, 0x10, 0x39,
	0x39, 0xe9, 0x80, 0x2c, 0x28, 0x76, 0x39, 0x40, 0x43, 0x09, 0x4f, 0x8f, 0x4c, 0x67, 0x6f, 0x96,
	0x66, 0xd4, 0x59, 0xd2, 0xe1, 0xac, 0x4b, 0xc3, 0x90, 0x44, 0x82, 0xcb, 0x69, 0xa9, 0xd9, 0xbd,
	0xb5, 0x3a, 0x67, 0xb3, 0xff, 0x3e, 0x67, 0xb5, 0xd1, 0x39, 0xf3, 0xe1, 0xd2, 0x36, 0xa5, 0x0f,
	0x94, 0x92, 0x4d, 0x7a, 0x35, 0x08, 0xc3, 0x39, 0x25, 0x3b, 0x59, 0xb4, 0xb9, 0xc6, 0x3c, 0x56,
	0x43, 0xa9, 0x00, 0xf3, 0x33, 0xb8, 0x3c, 0x72, 0x54, 0x76, 0x8f, 0x43, 0xa1, 0xc0, 0x98, 0x50,
	0x05, 0x5d, 0xb6, 0x0d, 0x57, 0x76, 0x7d, 0xee, 0x3a, 0xac, 0x55, 0x90, 0xca, 0x64, 0x4d, 0x90,
	0xf4, 0x5a, 0x51, 0x8c, 0xd2, 0x5e, 0x7b, 0x08, 0xdf, 0xb9, 0x4e, 0x84, 0x82, 0xfd, 0xd8, 0xe7,
	0x82, 0xb2, 0xe3, 0x5b, 0xff, 0xbd, 0xcf, 0xfb, 0xaa, 0x56, 0x29, 0x56, 0xb5, 0xea, 0x80, 0xaa,
	0x09, 0xb8, 0x3e, 0xfe, 0xe4, 0x8c, 0xf7, 0x7b, 0x70, 0x5e, 0x49, 0x33, 0x57, 0xba, 0x81, 0xe2,
	0x66, 0x62, 0x37, 0x80, 0x1b, 0xad, 0x71, 0xe3, 0xa7, 0x69, 0xb8, 0x90, 0x87, 0xdf, 0x27, 0xec,
	0xc8, 0x77, 0x09, 0xfa, 0x0e, 0xc0, 0xc5, 0x61, 0xcd, 0x40, 0x1a, 0x2e, 0x11, 0x22, 0x7d, 0x05,
	0x97, 0x09, 0x8c, 0xb9, 0xdf, 0x6d, 0x5e, 0xee, 0x6b, 0x0c, 0xea, 0x69, 0x99, 0xe1, 0x18, 0x11,
	0xe9, 0x18, 0x39, 0x5e, 0x2f, 0x73, 0x7c, 0xf5, 0xc7, 0x5f, 0xdf, 0x54, 0x4e, 0x9a, 0x35, 0x2b,
	0x0f, 0xb1, 0x05, 0x36, 0xd0, 0xaf, 0x00, 0xa2, 0x51, 0xfd, 0x40, 0x3a, 0x2e, 0x95, 0x24, 0xfd,
	0x34, 0x2e, 0x17, 0x1c, 0x33, 0xea, 0x36, 0x6f, 0x28, 0x24, 0xd7, 0xfa, 0x50, 0xc3, 0x89, 0x0c,
	0xf2, 0xd0, 0xe7, 0xc2, 0x8f, 0x3c, 0x23, 0x07, 0xe8, 0xe3, 0x00, 0x92, 0xf4, 0xca, 0xc6, 0x72,
	0x8f, 0xb4, 0xf5, 0x48, 0xe9, 0x93, 0xc7, 0xe8, 0x5b, 0x00, 0x17, 0x86, 0xde, 0x2f, 0xb4, 0x8c,
	0x8b, 0x5f, 0x46, 0x5d, 0xc3, 0x25, 0x4f, 0x9d, 0xf9, 0xe9, 0x50, 0x6d, 0x6f, 0xf8, 0x5c, 0x8c,
	0x92, 0xe1, 0x7a, 0x99, 0x43, 0xd2, 0x9c, 0x47, 0xd0, 0xea, 0x3f, 0x87, 0xdf, 0xa7, 0xcc, 0xd4,
	0x27, 0x2c, 0x65, 0x56, 0xf0, 0x1e, 0xa6, 0xcc, 0x8a, 0x5e, 0x3b, 0xf3, 0xf3, 0x6e, 0xf3, 0x43,
	0x85, 0x99, 0x76, 0x9d, 0x88, 0xe2, 0x4a, 0x96, 0x7a, 0xd2, 0x12, 0xa2, 0xb2, 0x12, 0x36, 0x9e,
	0x4c, 0x43, 0xa4, 0xf4, 0x7a, 0xde, 0xb8, 0x3f, 0x03, 0xb8, 0x30, 0x24, 0x47, 0x68, 0x19, 0x17,
	0x6b, 0xa1, 0xae, 0xe1, 0x12, 0xe5, 0x4a, 0x1a, 0xe2, 0xca, 0x80, 0x78, 0x21, 0xa9, 0xa7, 0x59,
	0x6f, 0x2a, 0x3b, 0xf4, 0x12, 0xbb, 0xa4, 0xbf, 0x6e, 0xbe, 0x59, 0x42, 0xdf, 0x52, 0x42, 0x27,
	0x0d, 0xfd, 0x04, 0x40, 0x34, 0x2a, 0x52, 0x48, 0xc7, 0xa5, 0xea, 0xa7, 0x9f, 0xc6, 0xe5, 0xaa,
	0x66, 0x76, 0xba, 0xcd, 0x4f, 0x06, 0xf9, 0xaf, 0x65, 0xe8, 0x81, 0x62, 0x2b, 0x00, 0x7d, 0x1c,
	0x40, 0x66, 0xb4, 0xb6, 0x71, 0x56, 0xa5, 0x6e, 0x3d, 0x1a, 0x14, 0xe0, 0xc7, 0xe8, 0xc7, 0x0a,
	0x34, 0xc6, 0x69, 0x18, 0x5a, 0xc7, 0x13, 0x0a, 0xac, 0x7e, 0x1e, 0x4f, 0x2a, 0x88, 0xe6, 0x2f,
	0xa0, 0xdb, 0xfc, 0x1a, 0x0c, 0x26, 0xbd, 0x35, 0xd8, 0xf8, 0xaa, 0x10, 0x1a, 0x31, 0x61, 0xbd,
	0x66, 0x33, 0x28, 0x6b, 0x11, 0x46, 0x5a, 0xc6, 0xbd, 0xe3, 0xe4, 0x22, 0x09, 0x17, 0x58, 0x7f,
	0x85, 0xbd, 0xb2, 0x54, 0x6f, 0xa3, 0xb7, 0x26, 0xb8, 0x7c, 0xbe, 0xfd, 0x77, 0xa5, 0xdb, 0x7c,
	0x5e, 0x41, 0xbf, 0x03, 0xb8, 0xa4, 0x24, 0x6a, 0xec, 0x1f, 0x73, 0x41, 0x42, 0xa3, 0x79, 0x6b,
	0x0f, 0xbd, 0xef, 0xd1, 0xfa, 0x03, 0x5f, 0x18, 0x9e, 0x7d, 0x6b, 0xa7, 0xee, 0x39, 0x82, 0x74,
	0x9c, 0x63, 0xa3, 0x00, 0xbb, 0x4b, 0x42, 0x6a, 0x34, 0xe3, 0x38, 0xf0, 0xdd, 0xf4, 0x69, 0xde,
	0x84, 0x8b, 0xb7, 0xf9, 0x11, 0x11, 0x4e, 0x64, 0xec, 0x26, 0x0f, 0x0f, 0xa3, 0x47, 0xfa, 0x19,
	0x91, 0x5a, 0x70, 0x2b, 0xb3, 0x34, 0x2e, 0x5e, 0xf5, 0x92, 0x3f, 0xf7, 0xb1, 0x4b, 0xc3, 0x8d,
	0x2b, 0x10, 0x36, 0x63, 0xc7, 0x6d, 0x13, 0xa3, 0x81, 0x37, 0x91, 0xd5, 0x16, 0x22, 0xde, 0xb2,
	0xac, 0x4e, 0xa7, 0x83, 0x1d, 0x69, 0xc6, 0x94, 0x79, 0x56, 0xe0, 0xbb, 0x24, 0xe2, 0x84, 0x5b,
	0x37, 0xf6, 0x76, 0xae, 0xdd, 0xdc, 0xbf, 0x56, 0x6f, 0xe0, 0x4d, 0xdc, 0x16, 0x61, 0xd0, 0xa8,
	0x5e, 0xc0, 0x9b, 0xfa, 0xc9, 0x80, 0xba, 0x4e, 0xd0, 0xa6, 0x5c, 0x6c, 0x5d, 0xda, 0xbc, 0x74,
	0x61, 0x03, 0x00, 0xf6, 0x25, 0x80, 0xff, 0x37, 0x09, 0x74, 0x2d, 0x21, 0xc1, 0xb7, 0x2c, 0xcb,
	0xf3, 0x45, 0xfb, 0xf0, 0x5e, 0x42, 0xd3, 0x8a, 0x69, 0x87, 0x30, 0x1e, 0xf8, 0x2d, 0xc2, 0xac,
	0x34, 0x6e, 0xdd, 0x63, 0xb1, 0x5b, 0xf7, 0x3a, 0x75, 0xa5, 0xb6, 0x75, 0x2e, 0x43, 0xd6, 0x5b,
	0x24, 0xa4, 0x4f, 0x5f, 0xac, 0x82, 0x67, 0x2f, 0x56, 0xc1, 0xf3, 0x17, 0xab, 0xe0, 0xb7, 0x97,
	0xab, 0xe0, 0xe9, 0xcb, 0x55, 0x70, 0x77, 0x5a, 0xfe, 0x9f, 0x75, 0x6f, 0x46, 0xfe, 0x5c, 0xfc,
	0x27, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x66, 0x9e, 0x17, 0xe0, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	RegisterCustomer(ctx context.Context, in *RegisterCustomerRequest, opts ...grpc.CallOption) (*RegisterCustomerResponse, error)
	UnregisterCustomer(ctx context.Context, in *UnregisterCustomerRequest, opts ...grpc.CallOption) (*UnregisterCustomerResponse, error)
	GetAllCustomers(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error)
	GetCustomerByID(ctx context.Context, in *GetCustomerByIDRequest, opts ...grpc.CallOption) (*GetCustomerByIDResponse, error)
}

type customerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerServiceClient(cc *grpc.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) RegisterCustomer(ctx context.Context, in *RegisterCustomerRequest, opts ...grpc.CallOption) (*RegisterCustomerResponse, error) {
	out := new(RegisterCustomerResponse)
	err := c.cc.Invoke(ctx, "/CustomerService/RegisterCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UnregisterCustomer(ctx context.Context, in *UnregisterCustomerRequest, opts ...grpc.CallOption) (*UnregisterCustomerResponse, error) {
	out := new(UnregisterCustomerResponse)
	err := c.cc.Invoke(ctx, "/CustomerService/UnregisterCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetAllCustomers(ctx context.Context, in *GetAllCustomersRequest, opts ...grpc.CallOption) (*GetAllCustomersResponse, error) {
	out := new(GetAllCustomersResponse)
	err := c.cc.Invoke(ctx, "/CustomerService/GetAllCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) GetCustomerByID(ctx context.Context, in *GetCustomerByIDRequest, opts ...grpc.CallOption) (*GetCustomerByIDResponse, error) {
	out := new(GetCustomerByIDResponse)
	err := c.cc.Invoke(ctx, "/CustomerService/GetCustomerByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	RegisterCustomer(context.Context, *RegisterCustomerRequest) (*RegisterCustomerResponse, error)
	UnregisterCustomer(context.Context, *UnregisterCustomerRequest) (*UnregisterCustomerResponse, error)
	GetAllCustomers(context.Context, *GetAllCustomersRequest) (*GetAllCustomersResponse, error)
	GetCustomerByID(context.Context, *GetCustomerByIDRequest) (*GetCustomerByIDResponse, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) RegisterCustomer(ctx context.Context, req *RegisterCustomerRequest) (*RegisterCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) UnregisterCustomer(ctx context.Context, req *UnregisterCustomerRequest) (*UnregisterCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterCustomer not implemented")
}
func (*UnimplementedCustomerServiceServer) GetAllCustomers(ctx context.Context, req *GetAllCustomersRequest) (*GetAllCustomersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllCustomers not implemented")
}
func (*UnimplementedCustomerServiceServer) GetCustomerByID(ctx context.Context, req *GetCustomerByIDRequest) (*GetCustomerByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCustomerByID not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_RegisterCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).RegisterCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/RegisterCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).RegisterCustomer(ctx, req.(*RegisterCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UnregisterCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UnregisterCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/UnregisterCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UnregisterCustomer(ctx, req.(*UnregisterCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetAllCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllCustomersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetAllCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/GetAllCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetAllCustomers(ctx, req.(*GetAllCustomersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_GetCustomerByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCustomerByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).GetCustomerByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerService/GetCustomerByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).GetCustomerByID(ctx, req.(*GetCustomerByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterCustomer",
			Handler:    _CustomerService_RegisterCustomer_Handler,
		},
		{
			MethodName: "UnregisterCustomer",
			Handler:    _CustomerService_UnregisterCustomer_Handler,
		},
		{
			MethodName: "GetAllCustomers",
			Handler:    _CustomerService_GetAllCustomers_Handler,
		},
		{
			MethodName: "GetCustomerByID",
			Handler:    _CustomerService_GetCustomerByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "models.proto",
}

// ReservationServiceClient is the client API for ReservationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReservationServiceClient interface {
	BookReservation(ctx context.Context, in *BookReservationRequest, opts ...grpc.CallOption) (*BookReservationResponse, error)
	DiscardReservation(ctx context.Context, in *DiscardReservationRequest, opts ...grpc.CallOption) (*DiscardReservationResponse, error)
	//    rpc EditReservation (EditReservationRequest) returns (EditReservationResponse) {
	//        option (google.api.http) = {
	//			put: "/reservation/{reservation_id}"
	//			body: "reservation"
	//			additional_bindings: [
	//			    {
	//			        patch: "/reservation/{reservation_id}"
	//			        body: "reservation"
	//			    },
	//			    {
	//			        patch: "/reservation/{reservation_id}"
	//			        body: "*"
	//                }
	//			]
	//		};
	//        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
	//            summary: "Edit an existing reservation"
	//            description: "Edit an existing reservation"
	//            tags: "reservation"
	//        };
	//    }
	GetReservationHistoryPerCustomer(ctx context.Context, in *GetReservationHistoryPerCustomerRequest, opts ...grpc.CallOption) (*GetReservationHistoryPerCustomerResponse, error)
}

type reservationServiceClient struct {
	cc *grpc.ClientConn
}

func NewReservationServiceClient(cc *grpc.ClientConn) ReservationServiceClient {
	return &reservationServiceClient{cc}
}

func (c *reservationServiceClient) BookReservation(ctx context.Context, in *BookReservationRequest, opts ...grpc.CallOption) (*BookReservationResponse, error) {
	out := new(BookReservationResponse)
	err := c.cc.Invoke(ctx, "/ReservationService/BookReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationServiceClient) DiscardReservation(ctx context.Context, in *DiscardReservationRequest, opts ...grpc.CallOption) (*DiscardReservationResponse, error) {
	out := new(DiscardReservationResponse)
	err := c.cc.Invoke(ctx, "/ReservationService/DiscardReservation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reservationServiceClient) GetReservationHistoryPerCustomer(ctx context.Context, in *GetReservationHistoryPerCustomerRequest, opts ...grpc.CallOption) (*GetReservationHistoryPerCustomerResponse, error) {
	out := new(GetReservationHistoryPerCustomerResponse)
	err := c.cc.Invoke(ctx, "/ReservationService/GetReservationHistoryPerCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReservationServiceServer is the server API for ReservationService service.
type ReservationServiceServer interface {
	BookReservation(context.Context, *BookReservationRequest) (*BookReservationResponse, error)
	DiscardReservation(context.Context, *DiscardReservationRequest) (*DiscardReservationResponse, error)
	//    rpc EditReservation (EditReservationRequest) returns (EditReservationResponse) {
	//        option (google.api.http) = {
	//			put: "/reservation/{reservation_id}"
	//			body: "reservation"
	//			additional_bindings: [
	//			    {
	//			        patch: "/reservation/{reservation_id}"
	//			        body: "reservation"
	//			    },
	//			    {
	//			        patch: "/reservation/{reservation_id}"
	//			        body: "*"
	//                }
	//			]
	//		};
	//        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
	//            summary: "Edit an existing reservation"
	//            description: "Edit an existing reservation"
	//            tags: "reservation"
	//        };
	//    }
	GetReservationHistoryPerCustomer(context.Context, *GetReservationHistoryPerCustomerRequest) (*GetReservationHistoryPerCustomerResponse, error)
}

// UnimplementedReservationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReservationServiceServer struct {
}

func (*UnimplementedReservationServiceServer) BookReservation(ctx context.Context, req *BookReservationRequest) (*BookReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BookReservation not implemented")
}
func (*UnimplementedReservationServiceServer) DiscardReservation(ctx context.Context, req *DiscardReservationRequest) (*DiscardReservationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiscardReservation not implemented")
}
func (*UnimplementedReservationServiceServer) GetReservationHistoryPerCustomer(ctx context.Context, req *GetReservationHistoryPerCustomerRequest) (*GetReservationHistoryPerCustomerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReservationHistoryPerCustomer not implemented")
}

func RegisterReservationServiceServer(s *grpc.Server, srv ReservationServiceServer) {
	s.RegisterService(&_ReservationService_serviceDesc, srv)
}

func _ReservationService_BookReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServiceServer).BookReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReservationService/BookReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServiceServer).BookReservation(ctx, req.(*BookReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReservationService_DiscardReservation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardReservationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServiceServer).DiscardReservation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReservationService/DiscardReservation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServiceServer).DiscardReservation(ctx, req.(*DiscardReservationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReservationService_GetReservationHistoryPerCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReservationHistoryPerCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReservationServiceServer).GetReservationHistoryPerCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ReservationService/GetReservationHistoryPerCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReservationServiceServer).GetReservationHistoryPerCustomer(ctx, req.(*GetReservationHistoryPerCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReservationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ReservationService",
	HandlerType: (*ReservationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BookReservation",
			Handler:    _ReservationService_BookReservation_Handler,
		},
		{
			MethodName: "DiscardReservation",
			Handler:    _ReservationService_DiscardReservation_Handler,
		},
		{
			MethodName: "GetReservationHistoryPerCustomer",
			Handler:    _ReservationService_GetReservationHistoryPerCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "models.proto",
}

func (m *Customer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Customer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Customer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdated != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x38
	}
	if m.Created != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Created))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintModels(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintModels(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x12
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAllCustomersRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAllCustomersRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAllCustomersRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x10
	}
	if m.Limit != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAllCustomersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAllCustomersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAllCustomersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Customers) > 0 {
		for iNdEx := len(m.Customers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Customers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintModels(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetCustomerByIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCustomerByIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCustomerByIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetCustomerByIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetCustomerByIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetCustomerByIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if m.Customer != nil {
		{
			size, err := m.Customer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModels(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RegisterCustomerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterCustomerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterCustomerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Customer != nil {
		{
			size, err := m.Customer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModels(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RegisterCustomerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterCustomerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterCustomerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if m.Customer != nil {
		{
			size, err := m.Customer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModels(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnregisterCustomerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnregisterCustomerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnregisterCustomerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UnregisterCustomerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnregisterCustomerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnregisterCustomerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Reservation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Reservation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Reservation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdated != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x48
	}
	if m.Created != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Created))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Comments) > 0 {
		i -= len(m.Comments)
		copy(dAtA[i:], m.Comments)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Comments)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x32
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.ReservationName) > 0 {
		i -= len(m.ReservationName)
		copy(dAtA[i:], m.ReservationName)
		i = encodeVarintModels(dAtA, i, uint64(len(m.ReservationName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.StartTime) > 0 {
		i -= len(m.StartTime)
		copy(dAtA[i:], m.StartTime)
		i = encodeVarintModels(dAtA, i, uint64(len(m.StartTime)))
		i--
		dAtA[i] = 0x1a
	}
	if m.SeatCount != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.SeatCount))
		i--
		dAtA[i] = 0x10
	}
	if m.ReservationId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.ReservationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BookReservationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BookReservationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BookReservationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reservation != nil {
		{
			size, err := m.Reservation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModels(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BookReservationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BookReservationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BookReservationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if m.Reservation != nil {
		{
			size, err := m.Reservation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintModels(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DiscardReservationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DiscardReservationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DiscardReservationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReservationId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.ReservationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DiscardReservationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DiscardReservationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DiscardReservationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetReservationHistoryPerCustomerRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetReservationHistoryPerCustomerRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetReservationHistoryPerCustomerRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Limit != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x10
	}
	if m.CustomerId != 0 {
		i = encodeVarintModels(dAtA, i, uint64(m.CustomerId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetReservationHistoryPerCustomerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetReservationHistoryPerCustomerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetReservationHistoryPerCustomerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Err) > 0 {
		i -= len(m.Err)
		copy(dAtA[i:], m.Err)
		i = encodeVarintModels(dAtA, i, uint64(len(m.Err)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Reservations) > 0 {
		for iNdEx := len(m.Reservations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Reservations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintModels(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintModels(dAtA []byte, offset int, v uint64) int {
	offset -= sovModels(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Customer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.Created != 0 {
		n += 1 + sovModels(uint64(m.Created))
	}
	if m.LastUpdated != 0 {
		n += 1 + sovModels(uint64(m.LastUpdated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAllCustomersRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Limit != 0 {
		n += 1 + sovModels(uint64(m.Limit))
	}
	if m.Offset != 0 {
		n += 1 + sovModels(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAllCustomersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Customers) > 0 {
		for _, e := range m.Customers {
			l = e.Size()
			n += 1 + l + sovModels(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCustomerByIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetCustomerByIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Customer != nil {
		l = m.Customer.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterCustomerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Customer != nil {
		l = m.Customer.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegisterCustomerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Customer != nil {
		l = m.Customer.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnregisterCustomerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnregisterCustomerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Reservation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReservationId != 0 {
		n += 1 + sovModels(uint64(m.ReservationId))
	}
	if m.SeatCount != 0 {
		n += 1 + sovModels(uint64(m.SeatCount))
	}
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.ReservationName)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Comments)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.Created != 0 {
		n += 1 + sovModels(uint64(m.Created))
	}
	if m.LastUpdated != 0 {
		n += 1 + sovModels(uint64(m.LastUpdated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BookReservationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	if m.Reservation != nil {
		l = m.Reservation.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BookReservationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Reservation != nil {
		l = m.Reservation.Size()
		n += 1 + l + sovModels(uint64(l))
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DiscardReservationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ReservationId != 0 {
		n += 1 + sovModels(uint64(m.ReservationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DiscardReservationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetReservationHistoryPerCustomerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CustomerId != 0 {
		n += 1 + sovModels(uint64(m.CustomerId))
	}
	if m.Limit != 0 {
		n += 1 + sovModels(uint64(m.Limit))
	}
	if m.Offset != 0 {
		n += 1 + sovModels(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetReservationHistoryPerCustomerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Reservations) > 0 {
		for _, e := range m.Reservations {
			l = e.Size()
			n += 1 + l + sovModels(uint64(l))
		}
	}
	l = len(m.Err)
	if l > 0 {
		n += 1 + l + sovModels(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovModels(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozModels(x uint64) (n int) {
	return sovModels(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Customer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Customer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Customer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			m.Created = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Created |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAllCustomersRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAllCustomersRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAllCustomersRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAllCustomersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAllCustomersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAllCustomersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Customers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Customers = append(m.Customers, Customer{})
			if err := m.Customers[len(m.Customers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCustomerByIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCustomerByIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCustomerByIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetCustomerByIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetCustomerByIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetCustomerByIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Customer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Customer == nil {
				m.Customer = &Customer{}
			}
			if err := m.Customer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterCustomerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterCustomerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterCustomerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Customer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Customer == nil {
				m.Customer = &Customer{}
			}
			if err := m.Customer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterCustomerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterCustomerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterCustomerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Customer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Customer == nil {
				m.Customer = &Customer{}
			}
			if err := m.Customer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnregisterCustomerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnregisterCustomerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnregisterCustomerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnregisterCustomerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnregisterCustomerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnregisterCustomerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Reservation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Reservation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Reservation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationId", wireType)
			}
			m.ReservationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReservationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SeatCount", wireType)
			}
			m.SeatCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SeatCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReservationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Created", wireType)
			}
			m.Created = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Created |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BookReservationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BookReservationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BookReservationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reservation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reservation == nil {
				m.Reservation = &Reservation{}
			}
			if err := m.Reservation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BookReservationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BookReservationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BookReservationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reservation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reservation == nil {
				m.Reservation = &Reservation{}
			}
			if err := m.Reservation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DiscardReservationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiscardReservationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiscardReservationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReservationId", wireType)
			}
			m.ReservationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReservationId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DiscardReservationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DiscardReservationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DiscardReservationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetReservationHistoryPerCustomerRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetReservationHistoryPerCustomerRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetReservationHistoryPerCustomerRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetReservationHistoryPerCustomerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModels
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetReservationHistoryPerCustomerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetReservationHistoryPerCustomerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reservations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reservations = append(m.Reservations, Reservation{})
			if err := m.Reservations[len(m.Reservations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Err", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModels
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModels
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthModels
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Err = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModels(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthModels
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModels(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModels
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModels
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthModels
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthModels
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowModels
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipModels(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthModels
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthModels = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModels   = fmt.Errorf("proto: integer overflow")
)
